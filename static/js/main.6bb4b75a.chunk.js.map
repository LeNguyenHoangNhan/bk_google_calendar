{"version":3,"sources":["utils/generator.js","App.js","utils/parser.js","reportWebVitals.js","index.js"],"names":["toTimeString","week","dayOfWeek","time","times","match","date","Date","weekOfset","dayOfset","setDate","getDate","toISOString","split","replace","generateClass","clss","repeatTime","i","length","push","uuidv4","name","ID","group","room","campus","join","App","props","state","calendarInput","classList","timeTableValid","theme","handleCalendarInputChange","bind","handleCalendarSelect","changeTheme","handleDownload","event","this","setState","target","value","input","line","lineCount","tokenizedLine","trim","isNaN","parseInt","signature","toString","selected","parseCalendarInput","targetSignature","content","generateICSFileContent","blob","Blob","type","FileSaver","saveAs","localStorage","window","setItem","oldTheme","getItem","StrictMode","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6bb4b75a.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\n\nfunction toTimeString(week, dayOfWeek, time) { // time in the format hh:mm\n    let times = time.match(/\\d+/g);\n\n    let date = new Date(2022, 0, 2, times[0], times[1]); //start of week 1 used to calculate using offset\n\n    const weekOfset = week - 1;\n    const dayOfset = dayOfWeek - 2;\n\n    date.setDate(date.getDate() + (weekOfset * 7) + dayOfset);\n    let timeString = date.toISOString();\n\n    return (timeString.split('.')[0] + 'Z').replace(/-/g, '').replace(/:/g, '');\n}\n\nfunction generateClass(clss) {\n    let repeatTime = []\n\n    for (let i = 1; i < clss.week.length; i++) {\n        repeatTime.push(toTimeString(clss.week[i], clss.dayOfWeek, clss.time[0]))\n    }\n\n    let content = `BEGIN:VEVENT\nUID:${uuidv4()}\nDTSTAMP:${(new Date().toISOString().split('.')[0] + 'Z').replace(/-/g, '').replace(/:/g, '')}\nSUMMARY:${clss.name}\nDESCRIPTION:Mã môn: ${clss.ID}\\\\nMã lớp: ${clss.group}\nLOCATION:${clss.room}, ${clss.campus}\nDTSTART:${toTimeString(clss.week[0], clss.dayOfWeek, clss.time[0])}\nDTEND:${toTimeString(clss.week[0], clss.dayOfWeek, clss.time[1])}\nRDATE:${repeatTime.join(',')}\nEND:VEVENT`\n    return content;\n}\n\nfunction generateICSFileContent(classList) {\n    let content = `BEGIN:VCALENDAR\nVERSION:1.0\nPRODID:-//dev.chillcat.bkgooglecalendar//`;\n\n    for (let i = 0; i < classList.length; i++) {\n        if (classList[i].selected) {\n            content += `\n${generateClass(classList[i])}`\n        }\n    }\n\n    content += `\nEND:VCALENDAR`;\n    return content;\n}\n\n\nexport { toTimeString, generateICSFileContent };\n","import React from \"react\";\nimport \"./App.css\";\n\nimport GuideLine from \"./components/GuideLine/GuideLine\";\nimport CalendarInputField from \"./components/CalendarInput/CalendarInput\";\nimport CalendarSelector from \"./components/CalendarSelector/CalendarSelector\";\nimport DownloadButton from \"./components/DownloadButton/DownloadButton\";\nimport FileUsageGuide from \"./components/FileUsageGuide/FileUsageGuide\";\nimport Footer from \"./components/Footer/Footer\";\n\nimport { parseCalendarInput } from \"./utils/parser\";\nimport { generateICSFileContent } from \"./utils/generator\";\n\nimport FileSaver from \"file-saver\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      calendarInput: \"\", // the input field of calendar checkbox\n      classList: [], // the list of class after parsing the input\n      timeTableValid: false,\n      theme: \"light\",\n    };\n    this.handleCalendarInputChange = this.handleCalendarInputChange.bind(this);\n    this.handleCalendarSelect = this.handleCalendarSelect.bind(this);\n    this.changeTheme = this.changeTheme.bind(this);\n    this.handleDownload = this.handleDownload.bind(this);\n  }\n\n  handleCalendarInputChange(event) {\n    this.setState({ calendarInput: event.target.value });\n\n    const classList = parseCalendarInput(event.target.value);\n\n    this.setState({ classList });\n  }\n\n  handleCalendarSelect(event) {\n    const targetSignature = event.target.value;\n    let classList = this.state.classList;\n    for (let i = 0; i < classList.length; i++) {\n      if (classList[i].signature === targetSignature) {\n        classList[i].selected = !classList[i].selected;\n        break;\n      }\n    }\n    this.setState({ classList });\n  }\n  handleDownload() {\n    const content = generateICSFileContent(this.state.classList);\n    let blob = new Blob([content], { type: \"text/calendar\" });\n    FileSaver.saveAs(blob, \"export.ics\");\n  }\n\n  changeTheme(event) {\n    let localStorage = window.localStorage;\n\n    if (this.state.theme === \"light\") {\n      localStorage.setItem(\"theme\", \"dark\");\n      this.setState({ theme: \"dark\" });\n    } else {\n      localStorage.setItem(\"theme\", \"light\");\n      this.setState({ theme: \"light\" });\n    }\n  }\n\n  componentDidMount() {\n    let localStorage = window.localStorage;\n    const oldTheme = localStorage.getItem(\"theme\");\n    if (oldTheme !== null) {\n      this.setState({ theme: oldTheme });\n    } else {\n      this.setState({ theme: \"light\" });\n      localStorage.setItem(\"theme\", \"light\");\n    }\n  }\n\n  render() {\n    return (\n      <React.StrictMode>\n        <h1> App hiện đang bảo trì, xin các bạn thông cảm</h1>\n      </React.StrictMode>\n\n    );\n  }\n}\nexport default App;\n","function parseCalendarInput(input) {\n    let line = input.split('\\n');\n\n    const lineCount = line.length;\n    let classList = [];\n\n    for (let i = 0; i < lineCount; i++) {\n        let tokenizedLine = line[i].split('\\t'); // each token is separated by \\t (tab)\n\n        if (tokenizedLine.length < 11) {\n            continue; // missing token, skip current line\n        }\n\n        let ID = tokenizedLine[0].trim();\n        let name = tokenizedLine[1].trim();\n\n        let group = tokenizedLine[4].trim();\n        \n        let dayOfWeek = tokenizedLine[5].trim();\n        if (isNaN(parseInt(dayOfWeek, 10))) {\n            continue; // invalid day\n        } else {\n            dayOfWeek = parseInt(dayOfWeek, 10);\n        }\n        \n        let time = tokenizedLine[7].trim().match(/\\d+:\\d+/g);\n        if (time === null) {\n            continue;\n        }\n\n        let room = tokenizedLine[8].trim();\n        let campus = tokenizedLine[9].trim();\n\n        let week = tokenizedLine[10].trim().match(/\\d+/g);\n        if (week === null) {\n            continue;\n        }\n        classList.push({\n            signature: ID + dayOfWeek.toString() + week.join(''),\n            ID,\n            name,\n            dayOfWeek,\n            time,\n            room,\n            campus,\n            week,\n            selected: true,\n            group\n        });\n\n    }\n    return classList;\n}\n\nexport { parseCalendarInput };","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}