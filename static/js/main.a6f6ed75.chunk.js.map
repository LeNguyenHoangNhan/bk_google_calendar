{"version":3,"sources":["components/GuideLine/GuideLine.jsx","components/CalendarInput/CalendarInput.jsx","components/CalendarSelector/CalendarSelector.jsx","components/DownloadButton/DownloadButton.jsx","utils/generator.js","App.js","utils/parser.js","reportWebVitals.js","index.js"],"names":["GuideLine","props","className","num","text","CalendarInputField","type","value","onChange","placeholder","CalendarSelector","selectors","classList","map","eachClass","index","Fragment","id","signature","name","changeHandler","checked","selected","htmlFor","DownloadButton","onClick","clickHandler","disabled","isDownloadable","toTimeString","week","dayOfWeek","time","times","match","date","Date","weekOfset","dayOfset","setDate","getDate","toISOString","split","replace","generateClass","clss","repeatTime","i","length","push","uuidv4","ID","group","room","campus","join","App","state","calendarInput","timeTableValid","handleCalendarInputChange","bind","handleCalendarSelect","handleDownload","event","this","setState","target","input","line","lineCount","tokenizedLine","trim","isNaN","parseInt","toString","parseCalendarInput","targetSignature","content","generateICSFileContent","blob","Blob","FileSaver","saveAs","StrictMode","filter","c","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6f6ed75.chunk.js","sourcesContent":["import React from 'react';\nimport \"./GuideLine.css\";\n\nfunction GuideLine(props) {\n    return <div className=\"guide-line_wrapper\">\n        <div className=\"guide-line_number\">\n            {props.num}\n        </div>\n        <p className=\"guide-line_description\">{props.text}</p>\n    </div>\n}\n\nexport default GuideLine;","import React from 'react';\nimport './CalendarInput.css';\nfunction CalendarInputField(props) {\n    return <textarea type='text' value={props.value} onChange={props.onChange} className='calendar-input' placeholder=\"CO2011\tMô hình hóa toán học...\"></textarea>\n}\n\nexport default CalendarInputField;","import React from 'react';\n\nfunction CalendarSelector(props) {\n    const selectors = props.classList.map((eachClass, index) => {\n        return <React.Fragment key={eachClass.signature}>\n            <input id={eachClass.signature} type='checkbox' name={eachClass.name} value={eachClass.signature} onChange={props.changeHandler} checked={eachClass.selected} />\n            <label htmlFor={eachClass.signature} >\n                {eachClass.name}\n            </label>\n            <br />\n        </React.Fragment>\n    }\n    );\n\n    return <>\n        {selectors}\n    </>;\n}\n\nexport default CalendarSelector;","import React from 'react';\n\nfunction DownloadButton(props) {\n    return <button onClick={props.clickHandler} disabled={!props.isDownloadable}>Tải xuống</button>\n}\n\nexport default DownloadButton;","import { v4 as uuidv4 } from 'uuid';\n\nfunction toTimeString(week, dayOfWeek, time) { // time in the format hh:mm\n    let times = time.match(/\\d+/g);\n\n    let date = new Date(2021, 7, 16, times[0], times[1]); //start of week 33 used to calculate using offset \n\n    const weekOfset = week - 33;\n    const dayOfset = dayOfWeek - 2;\n\n    date.setDate(date.getDate() + (weekOfset * 7) + dayOfset);\n    let timeString = date.toISOString();\n\n    return (timeString.split('.')[0] + 'Z').replace(/-/g, '').replace(/:/g, '');\n}\n\nfunction generateClass(clss) {\n    let repeatTime = []\n\n    for (let i = 0; i < clss.week.length; i++) {\n        repeatTime.push(toTimeString(clss.week[i], clss.dayOfWeek, clss.time[0]))\n    }\n\n    let content = `BEGIN:VEVENT\nUID:${uuidv4()}\nDTSTAMP:${(new Date().toISOString().split('.')[0] + 'Z').replace(/-/g, '').replace(/:/g, '')}\nSUMMARY:${clss.name}\nDESCRIPTION:Mã môn: ${clss.ID}\\\\nMã lớp: ${clss.group}\nLOCATION:${clss.room}, ${clss.campus}\nDTSTART:${toTimeString(clss.week[0], clss.dayOfWeek, clss.time[0])}\nDTEND:${toTimeString(clss.week[0], clss.dayOfWeek, clss.time[1])}\nRDATE:${repeatTime.join(',')}\nEND:VEVENT`\n    return content;\n}\n\nfunction generateICSFileContent(classList) {\n    let content = `BEGIN:VCALENDAR\nVERSION:2.0\nPRODID:-//bkalendar//Google Calendar v1.0/VI`;\n\n    for (let i = 0; i < classList.length; i++) {\n        if (classList[i].selected) {\n            content += `\n${generateClass(classList[i])}`\n        }\n    }\n\n    content += `\nEND:VCALENDAR`;\n    return content;\n}\n\n\nexport { toTimeString, generateICSFileContent };","import React from 'react';\nimport './App.css';\nimport GuideLine from './components/GuideLine/GuideLine';\nimport CalendarInputField from './components/CalendarInput/CalendarInput';\nimport CalendarSelector from './components/CalendarSelector/CalendarSelector';\nimport DownloadButton from './components/DownloadButton/DownloadButton';\nimport { parseCalendarInput } from './utils/parser';\nimport { generateICSFileContent } from './utils/generator';\nimport FileSaver from 'file-saver';\n\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            calendarInput: '', // the input field of calendar checkbox\n            classList: [], // the list of class after parsing the input\n            timeTableValid: false\n        };\n        this.handleCalendarInputChange = this.handleCalendarInputChange.bind(this);\n        this.handleCalendarSelect = this.handleCalendarSelect.bind(this);\n        this.handleDownload = this.handleDownload.bind(this);\n    }\n\n    handleCalendarInputChange(event) {\n        this.setState({ calendarInput: event.target.value });\n\n        const classList = parseCalendarInput(event.target.value);\n\n        this.setState({ classList });\n    }\n\n    handleCalendarSelect(event) {\n        const targetSignature = event.target.value;\n        let classList = this.state.classList;\n        for (let i = 0; i < classList.length; i++) {\n            if (classList[i].signature === targetSignature) {\n                classList[i].selected = !classList[i].selected;\n            }\n        } \n        this.setState({ classList });\n\n    }\n    handleDownload(event) {\n        const content = generateICSFileContent(this.state.classList);\n        let blob = new Blob([content], { type: 'text/calendar' });\n        FileSaver.saveAs(blob, 'export.ics');\n    }\n    render() {\n        return <React.StrictMode>\n            <div id='app_wrapper'>\n                <h1 className='header'>BK Google Calendar</h1>\n                <hr className='header_separator' />\n                <GuideLine num={1} text={'Copy và dán thời khoá biểu của bạn vào đây, nhớ copy từ “Học kỳ 1...”  đến cuối bảng nhé.'} />\n                <CalendarInputField value={this.state.calendarInput} onChange={this.handleCalendarInputChange} />\n                <GuideLine num={2} text={'Chọn môn học mà bạn muốn xuất thời khoá biểu dưới đây.'} />\n                <CalendarSelector classList={this.state.classList} changeHandler={this.handleCalendarSelect} />\n                <GuideLine num={3} text={'Bấm nút Tải xuống để tải về file ics nhé.'} />\n                <DownloadButton isDownloadable={this.state.classList.length !== 0 && this.state.classList.filter(c => c.selected).length !== 0} clickHandler={this.handleDownload} />\n            </div>\n        </React.StrictMode>;\n    }\n}\nexport default App;\n","function parseCalendarInput(input) {\n    let line = input.split('\\n');\n\n    const lineCount = line.length;\n    let classList = [];\n\n    for (let i = 0; i < lineCount; i++) {\n        let tokenizedLine = line[i].split('\\t'); // each token is separated by \\t (tab)\n\n        if (tokenizedLine.length < 11) {\n            continue; // missing token, skip current line\n        }\n\n        let ID = tokenizedLine[0].trim();\n        let name = tokenizedLine[1].trim();\n\n        let group = tokenizedLine[4].trim();\n        \n        let dayOfWeek = tokenizedLine[5].trim();\n        if (isNaN(parseInt(dayOfWeek, 10))) {\n            continue; // invalid day\n        } else {\n            dayOfWeek = parseInt(dayOfWeek, 10);\n        }\n        \n        let time = tokenizedLine[7].trim().match(/\\d+:\\d+/g);\n        if (time === null) {\n            continue;\n        }\n\n        let room = tokenizedLine[8].trim();\n        let campus = tokenizedLine[9].trim();\n\n        let week = tokenizedLine[10].trim().match(/\\d+/g);\n        if (week === null) {\n            continue;\n        }\n        classList.push({\n            signature: ID + dayOfWeek.toString() + week.join(''),\n            ID,\n            name,\n            dayOfWeek,\n            time,\n            room,\n            campus,\n            week,\n            selected: true,\n            group\n        });\n\n    }\n    return classList;\n}\n\nexport { parseCalendarInput };","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}